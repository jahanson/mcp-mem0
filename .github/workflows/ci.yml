name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --dev

      - name: Lint with ruff
        run: |
          uv run ruff check src/
          uv run ruff format --check src/

      - name: Type check with mypy
        run: uv run mypy src/ --ignore-missing-imports

      - name: Test import and basic functionality
        run: |
          uv run python -c "
          import sys
          sys.path.insert(0, 'src')
          try:
              from main import mcp
              from utils import get_mem0_client
              from logging_utils import logger
              print('✅ All imports successful')
          except ImportError as e:
              print(f'❌ Import failed: {e}')
              sys.exit(1)
          "

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t mcp-mem0:test .

      - name: Start container for testing
        run: |
          docker run -d --name mcp-mem0-test -p 8085:8050 \
            -e TRANSPORT="sse" \
            -e HOST="0.0.0.0" \
            -e PORT="8050" \
            -e LLM_PROVIDER="${{ secrets.LLM_PROVIDER }}" \
            -e LLM_BASE_URL="${{ secrets.LLM_BASE_URL }}" \
            -e LLM_API_KEY="${{ secrets.LLM_API_KEY }}" \
            -e LLM_CHOICE="${{ secrets.LLM_CHOICE }}" \
            -e EMBEDDING_MODEL_CHOICE="${{ secrets.EMBEDDING_MODEL_CHOICE }}" \
            -e DATABASE_URL="${{ secrets.TEST_DATABASE_URL }}" \
            -e MEM0_TELEMETRY="False" \
            mcp-mem0:test

      - name: Wait for service to start
        run: sleep 15

      - name: Test endpoint availability
        run: |
          wget --spider --tries=5 --timeout=10 http://localhost:8085/ || \
          (echo "Service not responding on port 8085" && exit 1)

      - name: Check container logs
        if: failure()
        run: docker logs mcp-mem0-test

      - name: Cleanup
        if: always()
        run: docker rm -f mcp-mem0-test
